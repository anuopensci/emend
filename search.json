[{"path":"https://anuopensci.github.io/emend/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emi Tanaka. Author, copyright holder. Jiajia Li. Author, maintainer.","code":""},{"path":"https://anuopensci.github.io/emend/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tanaka E, Li J (2025). emend: Cleaning Text Data AI Assistant. R package version 0.1.0, https://anuopensci.github.io/emend/, https://github.com/anuopensci/emend.","code":"@Manual{,   title = {emend: Cleaning Text Data with an AI Assistant},   author = {Emi Tanaka and Jiajia Li},   year = {2025},   note = {R package version 0.1.0, https://anuopensci.github.io/emend/},   url = {https://github.com/anuopensci/emend}, }"},{"path":"https://anuopensci.github.io/emend/index.html","id":"emend","dir":"","previous_headings":"","what":"Cleaning Text Data with an AI Assistant","title":"Cleaning Text Data with an AI Assistant","text":"Save time effort using emend clean standardise data. emend package artificial intelligence (AI) assistant contain collection functions help data cleaning tasks. WARNING: validate method works data context. default setting set results reproducible less prone “creativity”, desired data processing. reproducibility achieved within system (.e. computer) necessarily across different systems.","code":""},{"path":[]},{"path":"https://anuopensci.github.io/emend/index.html","id":"package","dir":"","previous_headings":"Installation","what":"Package","title":"Cleaning Text Data with an AI Assistant","text":"can install emend CRAN like : can install development version emend GitHub like :","code":"install.packages(\"emend\") # install.packages(\"pak\") pak::pak(\"anuopensci/emend\")"},{"path":"https://anuopensci.github.io/emend/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Cleaning Text Data with an AI Assistant","text":"","code":"library(emend)"},{"path":"https://anuopensci.github.io/emend/index.html","id":"specifying-the-llm","dir":"","previous_headings":"Examples","what":"Specifying the LLM","title":"Cleaning Text Data with an AI Assistant","text":"using functions emend, need set “Chat” object package ellmer, use “Chat” object input argument functions emend. set local LLM using Ollama: run code set Chat object. function tested LLM llama3.1:8b seed 0, preferred parameters. want use LLM via provider APIs: Follow instructions ellmer website set API keys create desired Chat object.","code":"chat <- ellmer::chat_ollama(model = \"llama3.1:8b\", seed = 0, echo = \"none\")"},{"path":"https://anuopensci.github.io/emend/index.html","id":"categorise-text","dir":"","previous_headings":"Examples","what":"Categorise text","title":"Cleaning Text Data with an AI Assistant","text":"categorical variables can simple typos alternative representations. example “UK” written also “United Kingdom”. can manually fix , , can tedious. can map automatically using emend_fct_match(). function actually works match continent well! Let’s use emend_lvl_match() easily see conversion levels alone. process required specification levels sometimes may know ahead levels. emend_get_levels() function attempt clean levels. can use cleaned levels map messy data correct levels.","code":"messy$country #>  [1] \"UK\"             \"US\"             \"Canada\"         \"UK\"             #>  [5] \"US\"             \"Canada\"         \"United Kingdom\" \"USA\"            #>  [9] \"New Zealand\"    \"NZ\"             \"Australia\"      \"New Zealand\"    #> [13] \"UK\"             \"United Kingdom\" \"UK\"             \"US\"             #> [17] \"United Kingdom\" \"Australia\"      \"US\"             \"Australia\" emend_fct_match(messy$country, levels = c(\"UK\", \"USA\", \"Canada\", \"Australia\", \"NZ\"), chat = chat) #>  [1] UK        USA       Canada    UK        USA       Canada    UK        #>  [8] USA       NZ        NZ        Australia NZ        UK        UK        #> [15] UK        USA       UK        Australia USA       Australia #> Levels: UK USA Canada Australia NZ emend_lvl_match(messy$country, levels = c(\"Asia\", \"Europe\", \"North America\", \"Oceania\", \"South America\"), chat = chat) #>              UK              US          Canada  United Kingdom             USA  #>        \"Europe\" \"North America\" \"North America\"        \"Europe\" \"North America\"  #>     New Zealand              NZ       Australia  #>       \"Oceania\"       \"Oceania\"       \"Oceania\" #>  #> ── Converted by emend: ───────────────────────────────────────────────────────── #>         original     converted #> 1             UK        Europe #> 2 United Kingdom        Europe #> 3             US North America #> 4         Canada North America #> 5            USA North America #> 6    New Zealand       Oceania #> 7             NZ       Oceania #> 8      Australia       Oceania levels <- emend_lvl_unique(messy$country, chat = chat) print(levels) #> [1] \"United Kingdom\" \"United States\"  \"Canada\"         \"New Zealand\"    #> [5] \"Australia\" emend_fct_match(messy$country, levels = levels, chat = chat) #>  [1] United Kingdom United States  Canada         United Kingdom United States  #>  [6] Canada         United Kingdom United States  New Zealand    New Zealand    #> [11] Australia      New Zealand    United Kingdom United Kingdom United Kingdom #> [16] United States  United Kingdom Australia      United States  Australia      #> Levels: United Kingdom United States Canada New Zealand Australia"},{"path":"https://anuopensci.github.io/emend/index.html","id":"correcting-order-of-levels-for-ordinal-variables","dir":"","previous_headings":"Examples","what":"Correcting order of levels for ordinal variables","title":"Cleaning Text Data with an AI Assistant","text":"levels categorical variables default ordered alphabetically. can problematic levels natural order. correct order may need manually specified like , can tedious task. emend_fct_reorder() function try reorder levels factor meaningful way automatically using large language model.","code":"factor(likerts$likert1) #>  [1] Strongly Disagree Neutral           Strongly Agree    Strongly Disagree #>  [5] Disagree          Somewhat Agree    Strongly Agree    Somewhat Disagree #>  [9] Agree             Disagree          Somewhat Disagree Somewhat Disagree #> [13] Strongly Disagree Somewhat Agree    Somewhat Agree    Disagree          #> [17] Agree             Agree             Disagree          Strongly Agree    #> [21] Strongly Disagree Strongly Agree    Somewhat Agree    Somewhat Agree    #> [25] Strongly Disagree Strongly Disagree Agree             Somewhat Agree    #> [29] Somewhat Agree    Disagree          Disagree          Agree             #> [33] Strongly Disagree Neutral           Strongly Agree    Strongly Disagree #> [37] Neutral           Somewhat Disagree Agree             Disagree          #> 7 Levels: Agree Disagree Neutral Somewhat Agree ... Strongly Disagree factor(likerts$likert1,         levels = c(\"Strongly Disagree\", \"Disagree\", \"Somewhat Disagree\", \"Neutral\", \"Somewhat Agree\", \"Agree\", \"Strongly Agree\"))  #>  [1] Strongly Disagree Neutral           Strongly Agree    Strongly Disagree #>  [5] Disagree          Somewhat Agree    Strongly Agree    Somewhat Disagree #>  [9] Agree             Disagree          Somewhat Disagree Somewhat Disagree #> [13] Strongly Disagree Somewhat Agree    Somewhat Agree    Disagree          #> [17] Agree             Agree             Disagree          Strongly Agree    #> [21] Strongly Disagree Strongly Agree    Somewhat Agree    Somewhat Agree    #> [25] Strongly Disagree Strongly Disagree Agree             Somewhat Agree    #> [29] Somewhat Agree    Disagree          Disagree          Agree             #> [33] Strongly Disagree Neutral           Strongly Agree    Strongly Disagree #> [37] Neutral           Somewhat Disagree Agree             Disagree          #> 7 Levels: Strongly Disagree Disagree Somewhat Disagree ... Strongly Agree emend_fct_reorder(likerts$likert1, chat = chat) |> levels() #> [1] \"Strongly Disagree\" \"Disagree\"          \"Somewhat Disagree\" #> [4] \"Neutral\"           \"Somewhat Agree\"    \"Agree\"             #> [7] \"Strongly Agree\""},{"path":"https://anuopensci.github.io/emend/index.html","id":"translate","dir":"","previous_headings":"Examples","what":"Translate","title":"Cleaning Text Data with an AI Assistant","text":"emend_translate() function can used translate text another language (default English). text can mix different languages. can also try identify language text.","code":"text <- c(\"猿も木から落ちる\", \"你好\", \"bon appetit\") emend_translate(text, chat = chat) #> [1] \"Even monkeys fall from trees.\" \"Hello.\"                        #> [3] \"Enjoy your meal.\" emend_what_language(text, chat = chat) #> [1] \"Japanese\"         \"Mandarin Chinese\" \"French\""},{"path":"https://anuopensci.github.io/emend/index.html","id":"dates","dir":"","previous_headings":"","what":"Dates","title":"Cleaning Text Data with an AI Assistant","text":"combining data different sources, inconsistencies date formats can occur frequently. Reformatting dates single format using traditional programming requires listing possible date formats can time-consuming. emend_clean_date() function uses LLM standardise dates international standard “YYYY-MM-DD”.","code":"x <- c(\"16/02/1997\", \"20 November 2024\", \"24 Mar 2022\", \"2000-01-01\", \"Jason\",         \"Dec 25, 2030\", \"11/05/2024\", \"March 10, 1999\") emend_clean_date(x, chat = chat) #> [1] \"1997-02-16\" \"2024-11-20\" \"2022-03-24\" \"2000-01-01\" NA           #> [6] \"2020-12-25\" \"2024-05-11\" \"1999-03-10\""},{"path":"https://anuopensci.github.io/emend/index.html","id":"addresses","dir":"","previous_headings":"","what":"Addresses","title":"Cleaning Text Data with an AI Assistant","text":"scraping data websites APIs, especially property-related information, addresses can present challenges. emend_clean_address() function uses LLM standardise addresses consistent format returns empty value items addresses.","code":"x <- c(\"154 university avenue, acton act 2601\",        \"76/2 Cape Street, Dickson ACT 2602\",        \"Shop 4/96 Bunda St, Canberra ACT 2601\",        \"11 E Row, Canberra ACT 2601\",        \"173/46 Macquarie St, Barton ACT 2600\",        \"Unit 189/260 City walk, Canberra ACT 2601\",        \"the kebab place\",        \"i don't know the address\") emend_clean_address(x, chat = chat) #> [1] \"154 University Ave, Acton ACT 2601\"    #> [2] \"76/2 Cape St, Dickson ACT 2602\"        #> [3] \"Shop 4/96 Bunda St, Canberra ACT 2601\" #> [4] \"11 E Row, Canberra ACT 2601\"           #> [5] \"173/46 Macquarie St, Barton ACT 2600\"  #> [6] \"189/260 City Walk, Canberra ACT 2601\"  #> [7] \"INVALID ADDRESS\"                       #> [8] \"INVALID ADDRESS\""},{"path":"https://anuopensci.github.io/emend/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related packages","title":"Cleaning Text Data with an AI Assistant","text":"air askgpt chatgpt ellmer gptchatteR gptstudio gpttools TheOpenAIR tidychatmodels","code":""},{"path":"https://anuopensci.github.io/emend/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Emi Tanaka Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://anuopensci.github.io/emend/reference/airbnb_listings.html","id":null,"dir":"Reference","previous_headings":"","what":"Airbnb listings and reviews — airbnb_listings","title":"Airbnb listings and reviews — airbnb_listings","text":"sample dataset Airbnb listings reviews properties Sydney, Australia.","code":""},{"path":"https://anuopensci.github.io/emend/reference/airbnb_listings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airbnb listings and reviews — airbnb_listings","text":"","code":"airbnb_listings  airbnb_reviews"},{"path":[]},{"path":"https://anuopensci.github.io/emend/reference/airbnb_listings.html","id":"airbnb-listings","dir":"Reference","previous_headings":"","what":"airbnb_listings","title":"Airbnb listings and reviews — airbnb_listings","text":"data.frame 1623 rows 68 columns id Airbnb's unique identifier listing. name Name listing. description Detailed description listing. neighborhood_overview Host's description neighbourhood. picture_url URL Airbnb hosted regular sized image listing. host_id Airbnb's unique identifier host/user. host_name Name host. Usually just first name(s). host_since date host/user created. hosts Airbnb guests date registered guest. host_location host's self reported location. host_about Description host. host_response_time time interval host responds inquiry guest. host_response_rate Percentage inquiries potential guests responded hosts. host_acceptance_rate rate host accepts booking requests. host_is_superhost Whether host super host . host_thumbnail_url thumbnail host. host_picture_url URL picture host. host_neighbourhood host neighbourhood. host_listings_count number listings host . host_total_listings_count number listings host . host_verifications Host communication verifications. host_has_profile_pic Whether host profile pic. host_identity_verified Whether host identity verified. neighbourhood_cleansed neighbourhood geocoded using latitude longitude neighborhoods defined open public digital shapefiles. latitude Uses World Geodetic System (WGS84) projection latitude longitude. longitude Uses World Geodetic System (WGS84) projection latitude longitude. property_type Self selected property type. Hotels Bed Breakfasts described hosts field. room_type Entire home/apt, Private room, Shared room, Hotel. Entire places best seeking home away home. entire place, whole space . usually includes bedroom, bathroom, kitchen, separate, dedicated entrance. Hosts note description property (ex: \"Host occupies first floor home\"), provide details listing. Private rooms great prefer little privacy, still value local connection. book private room, private room sleeping may share spaces others. might need walk indoor spaces another host guest may occupy get room. Shared rooms mind sharing space others. book shared room, sleeping space shared others share entire space people. Shared rooms popular among flexible travelers looking new friends budget-friendly stays. accommodates maximum capacity listing. bathrooms number bathrooms listing. bathrooms_text text number bathsroom listings. bedrooms number bedrooms. beds number bed(s). amenities amenities. price Daily price local currency. minimum_nights Minimum number night stay listing. maximum_nights Maximum number night stay listing. minimum_minimum_nights smallest minimum_night value calender (looking 365 nights future). maximum_minimum_nights largest minimum_night value calender (looking 365 nights future). minimum_maximum_nights smallest maximum_night value calender (looking 365 nights future). maximum_maximum_nights largest maximum_night value calender (looking 365 nights future). minimum_nights_avg_ntm average minimum_night value calender (looking 365 nights future). maximum_nights_avg_ntm average maximum_night value calender (looking 365 nights future). has_availability Whether availability . availability_30 availability listing x days future determined calendar. Note listing may available booked guest blocked host. availability_60  availability_90  availability_365  number_of_reviews number reviews listing . number_of_reviews_ltm number reviews listing (last 12 months). number_of_reviews_l30d number reviews listing (last 30 days). first_review date first/oldest review. last_review date last/newest review. review_scores_rating review score ratings listing. review_scores_accuracy review score accuracy listing. review_scores_cleanliness review score cleanliness listing. review_scores_checkin review score checkin experience listing. review_scores_communication review score communication listing. review_scores_location review score location listing. review_scores_value review score value listing. license licence/permit/registration number. instant_bookable Whether guest can automatically book listing without host requiring accept booking request. indicator commercial listing. calculated_host_listings_count number listings host current scrape, city/region geography. calculated_host_listings_count_entire_homes number Entire home/apt listings host current scrape, city/region geography. calculated_host_listings_count_private_rooms number Private room listings host current scrape, city/region geography. calculated_host_listings_count_shared_rooms number Shared room listings host current scrape, city/region geography. reviews_per_month average number reviews per month listing lifetime listing.","code":""},{"path":"https://anuopensci.github.io/emend/reference/airbnb_listings.html","id":"airbnb-reviews","dir":"Reference","previous_headings":"","what":"airbnb_reviews","title":"Airbnb listings and reviews — airbnb_listings","text":"data.frame 5679 rows 6 columns listing_id Unique identifier listing id Unique identifier review date Date review reviewer_id Unique identifier reviewer reviewer_name Name reviewer comments Text review","code":""},{"path":"https://anuopensci.github.io/emend/reference/airbnb_listings.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Airbnb listings and reviews — airbnb_listings","text":"https://insideairbnb.com/get--data/","code":""},{"path":"https://anuopensci.github.io/emend/reference/alcohol.html","id":null,"dir":"Reference","previous_headings":"","what":"Alcohol warehouse and retail sales — alcohol","title":"Alcohol warehouse and retail sales — alcohol","text":"year Year month Month supplier Supplier item_code Item code item_description Item description item_type Item type retail_sales Retail sales retail_transfers Retail transfers warehouse_sales Warehouse sales","code":""},{"path":"https://anuopensci.github.io/emend/reference/alcohol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alcohol warehouse and retail sales — alcohol","text":"","code":"alcohol"},{"path":"https://anuopensci.github.io/emend/reference/alcohol.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alcohol warehouse and retail sales — alcohol","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 1000 rows 9 columns.","code":""},{"path":"https://anuopensci.github.io/emend/reference/alcohol.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Alcohol warehouse and retail sales — alcohol","text":"https://catalog.data.gov/dataset/warehouse--retail-sales","code":""},{"path":"https://anuopensci.github.io/emend/reference/consumer.html","id":null,"dir":"Reference","previous_headings":"","what":"Amazon consumer reviews — consumer","title":"Amazon consumer reviews — consumer","text":"sample reviews Amazon applicances category.","code":""},{"path":"https://anuopensci.github.io/emend/reference/consumer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amazon consumer reviews — consumer","text":"","code":"consumer"},{"path":"https://anuopensci.github.io/emend/reference/consumer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Amazon consumer reviews — consumer","text":"data.frame 4549 rows 11 columns overall Overall rating product. verified Whether reviewer verified . review_date Review date. review_id unique identifier reviewer. reviewer_name name reviewer. review_text text review. summary Summary review. vote_helpful number helpful votes review. image images reviewer post receive product.","code":""},{"path":"https://anuopensci.github.io/emend/reference/consumer.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Amazon consumer reviews — consumer","text":"Jianmo Ni, Jiacheng Li, Julian McAuley (2019) Justifying recommendations using distantly-labeled reviews fined-grained aspects. Empirical Methods Natural Language Processing .","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend-package.html","id":null,"dir":"Reference","previous_headings":"","what":"emend: Cleaning Text Data with an AI Assistant — emend-package","title":"emend: Cleaning Text Data with an AI Assistant — emend-package","text":"Provides functions clean standardize messy data, including textual categories free-text addresses, using Large Language Models. package corrects typos, expands abbreviations, maps inconsistent entries standardized values. Ideal Bioinformatics, business, general data cleaning tasks.","code":""},{"path":[]},{"path":"https://anuopensci.github.io/emend/reference/emend-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"emend: Cleaning Text Data with an AI Assistant — emend-package","text":"Maintainer: Jiajia Li lijia970324@gmail.com (ORCID) Authors: Emi Tanaka dr.emi.tanaka@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_clean_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise address format — emend_clean_address","title":"Standardise address format — emend_clean_address","text":"function standardise inconsistent address formats standard format.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_clean_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise address format — emend_clean_address","text":"","code":"emend_clean_address(address_vector, chat = get_default_chat())"},{"path":"https://anuopensci.github.io/emend/reference/emend_clean_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise address format — emend_clean_address","text":"address_vector character vector assumed addresses. chat chat object defined ellmer.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_clean_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise address format — emend_clean_address","text":"character vector converted addresses.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_clean_address.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise address format — emend_clean_address","text":"","code":"# \\donttest{ # Convert a vector of inconsistent formatted address to a standard format options(ellmer_timeout_s = 3600)  x <- c(\"154 university avenue, acton act 2601\",        \"76/2 Cape Street, Dickson ACT 2602\",        \"Shop 4/96 Bunda St, Canberra ACT 2601\",        \"11 E Row, Canberra ACT 2601\",        \"173/46 Macquarie St, Barton ACT 2600\",        \"Unit 189/260 City walk, Canberra ACT 2601\",        \"the kebab place\",        \"i don't know the address\") chat <- ellmer::chat_ollama(model = \"llama3.1:8b\", seed = 0, echo = \"none\") emend_clean_address(x, chat = chat) #> [1] \"154 University Ave, Acton ACT 2601\"    #> [2] \"76/2 Cape St, Dickson ACT 2602\"        #> [3] \"Shop 4/96 Bunda St, Canberra ACT 2601\" #> [4] \"11 E Row, Canberra ACT 2601\"           #> [5] \"173/46 Macquarie St, Barton ACT 2600\"  #> [6] \"189/260 City Walk, Canberra ACT 2601\"  #> [7] \"INVALID ADDRESS\"                       #> [8] \"INVALID ADDRESS\"                       # }"},{"path":"https://anuopensci.github.io/emend/reference/emend_clean_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise date format — emend_clean_date","title":"Standardise date format — emend_clean_date","text":"function standardise inconsistent date formats.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_clean_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise date format — emend_clean_date","text":"","code":"emend_clean_date(dates_vector, chat = get_default_chat())"},{"path":"https://anuopensci.github.io/emend/reference/emend_clean_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise date format — emend_clean_date","text":"dates_vector character vector assumed dates. chat chat object defined ellmer.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_clean_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise date format — emend_clean_date","text":"vector Date objects.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_clean_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise date format — emend_clean_date","text":"","code":"# \\donttest{ x <- c(\"16/02/1997\", \"20 November 2024\", \"24 Mar 2022\", \"2000-01-01\", \"Jason\",         \"Dec 25, 2030\", \"11/05/2024\", \"March 10, 1999\") chat <- ellmer::chat_ollama(model = \"llama3.1:8b\", seed = 0, echo = \"none\") emend_clean_date(x, chat = chat) #> [1] \"1997-02-16\" \"2024-11-20\" \"2022-03-24\" \"2000-01-01\" NA           #> [6] \"2020-12-25\" \"2024-05-11\" \"1999-03-10\" # }"},{"path":"https://anuopensci.github.io/emend/reference/emend_fct_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match input factor to specified levels. — emend_fct_match","title":"Match input factor to specified levels. — emend_fct_match","text":"Match input factor specified levels.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_fct_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match input factor to specified levels. — emend_fct_match","text":"","code":"emend_fct_match(.f, levels = NULL, chat = get_default_chat())"},{"path":"https://anuopensci.github.io/emend/reference/emend_fct_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match input factor to specified levels. — emend_fct_match","text":".f factor. levels levels factor chat chat object defined ellmer.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_fct_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match input factor to specified levels. — emend_fct_match","text":"","code":"# \\donttest{ chat <- ellmer::chat_ollama(model = \"llama3.1:8b\", seed = 0, echo = \"none\") emend_fct_match(messy$country, levels = c(\"UK\", \"USA\", \"Canada\", \"Australia\", \"NZ\"), chat = chat) #>  [1] UK        USA       Canada    UK        USA       Canada    UK        #>  [8] USA       NZ        NZ        Australia NZ        UK        UK        #> [15] UK        USA       UK        Australia USA       Australia #> Levels: UK USA Canada Australia NZ # }"},{"path":"https://anuopensci.github.io/emend/reference/emend_fct_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the levels of the input factor in a meaningful way. — emend_fct_reorder","title":"Reorder the levels of the input factor in a meaningful way. — emend_fct_reorder","text":"Reorder levels input factor meaningful way.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_fct_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the levels of the input factor in a meaningful way. — emend_fct_reorder","text":"","code":"emend_fct_reorder(.f, chat = get_default_chat())"},{"path":"https://anuopensci.github.io/emend/reference/emend_fct_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the levels of the input factor in a meaningful way. — emend_fct_reorder","text":".f vector characters factor. chat chat object defined ellmer.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_fct_reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder the levels of the input factor in a meaningful way. — emend_fct_reorder","text":"factor standardized category labels.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_fct_reorder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder the levels of the input factor in a meaningful way. — emend_fct_reorder","text":"","code":"# \\donttest{ chat <- ellmer::chat_ollama(model = \"llama3.1:8b\", seed = 0, echo = \"none\") emend_fct_reorder(likerts$likert1, chat = chat) |> levels() #> [1] \"Strongly Disagree\" \"Disagree\"          \"Somewhat Disagree\" #> [4] \"Neutral\"           \"Somewhat Agree\"    \"Agree\"             #> [7] \"Strongly Agree\"    # }"},{"path":"https://anuopensci.github.io/emend/reference/emend_lvl_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match the input factor to supplied levels. — emend_lvl_match","title":"Match the input factor to supplied levels. — emend_lvl_match","text":"Match input factor supplied levels.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_lvl_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match the input factor to supplied levels. — emend_lvl_match","text":"","code":"emend_lvl_match(.f, levels = NULL, chat = get_default_chat())"},{"path":"https://anuopensci.github.io/emend/reference/emend_lvl_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match the input factor to supplied levels. — emend_lvl_match","text":".f vector characters factor. levels levels factor. chat chat object defined ellmer.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_lvl_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match the input factor to supplied levels. — emend_lvl_match","text":"named character vector standardised category labels, class \"emend_lvl_match\". names correspond original messy categories, values cleaned versions.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_lvl_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match the input factor to supplied levels. — emend_lvl_match","text":"","code":"# \\donttest{ chat <- ellmer::chat_ollama(model = \"llama3.1:8b\", seed = 0, echo = \"none\") emend_lvl_match(messy$country,                 levels = c(\"Asia\", \"Europe\", \"North America\", \"Oceania\",                            \"South America\"),                 chat = chat) #>              UK              US          Canada  United Kingdom             USA  #>        \"Europe\" \"North America\" \"North America\"        \"Europe\" \"North America\"  #>     New Zealand              NZ       Australia  #>       \"Oceania\"       \"Oceania\"       \"Oceania\"  #>  #> ── Converted by emend: ───────────────────────────────────────────────────────── #>         original     converted #> 1             UK        Europe #> 2 United Kingdom        Europe #> 3             US North America #> 4         Canada North America #> 5            USA North America #> 6    New Zealand       Oceania #> 7             NZ       Oceania #> 8      Australia       Oceania # }"},{"path":"https://anuopensci.github.io/emend/reference/emend_lvl_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the unique levels of messy categorical data The returned value is a vector. The LLM will return full names instead of abbreviations. You can use this functions to clean up your categorical data and obtain unique levels. Double check if the output from LLM is true to your data. This function is generally suitable for categories, not working well with sentences and too many categories. — emend_lvl_unique","title":"Get the unique levels of messy categorical data The returned value is a vector. The LLM will return full names instead of abbreviations. You can use this functions to clean up your categorical data and obtain unique levels. Double check if the output from LLM is true to your data. This function is generally suitable for categories, not working well with sentences and too many categories. — emend_lvl_unique","text":"Get unique levels messy categorical data returned value vector. LLM return full names instead abbreviations. can use functions clean categorical data obtain unique levels. Double check output LLM true data. function generally suitable categories, working well sentences many categories.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_lvl_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the unique levels of messy categorical data The returned value is a vector. The LLM will return full names instead of abbreviations. You can use this functions to clean up your categorical data and obtain unique levels. Double check if the output from LLM is true to your data. This function is generally suitable for categories, not working well with sentences and too many categories. — emend_lvl_unique","text":"","code":"emend_lvl_unique(.f, chat = get_default_chat())"},{"path":"https://anuopensci.github.io/emend/reference/emend_lvl_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the unique levels of messy categorical data The returned value is a vector. The LLM will return full names instead of abbreviations. You can use this functions to clean up your categorical data and obtain unique levels. Double check if the output from LLM is true to your data. This function is generally suitable for categories, not working well with sentences and too many categories. — emend_lvl_unique","text":".f vector characters factor. chat chat object defined ellmer.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_lvl_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the unique levels of messy categorical data The returned value is a vector. The LLM will return full names instead of abbreviations. You can use this functions to clean up your categorical data and obtain unique levels. Double check if the output from LLM is true to your data. This function is generally suitable for categories, not working well with sentences and too many categories. — emend_lvl_unique","text":"character vector standardised category names.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_lvl_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the unique levels of messy categorical data The returned value is a vector. The LLM will return full names instead of abbreviations. You can use this functions to clean up your categorical data and obtain unique levels. Double check if the output from LLM is true to your data. This function is generally suitable for categories, not working well with sentences and too many categories. — emend_lvl_unique","text":"","code":"# \\donttest{ options(ellmer_timeout_s = 3600)  chat <- ellmer::chat_ollama(model = \"llama3.1:8b\", seed = 0, echo = \"none\") emend_lvl_unique(messy$country, chat = chat) #> [1] \"United Kingdom\" \"United States\"  \"Canada\"         \"New Zealand\"    #> [5] \"Australia\"      # }"},{"path":"https://anuopensci.github.io/emend/reference/emend_translate.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate text from one language to another. — emend_translate","title":"Translate text from one language to another. — emend_translate","text":"Translate text one language another.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_translate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate text from one language to another. — emend_translate","text":"","code":"emend_translate(text, to = \"English\", chat = get_default_chat())"},{"path":"https://anuopensci.github.io/emend/reference/emend_translate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate text from one language to another. — emend_translate","text":"text text translate. language translate . default \"English\". chat ellmer Chat object.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_translate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate text from one language to another. — emend_translate","text":"character vector translated text.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_translate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate text from one language to another. — emend_translate","text":"","code":"# \\donttest{ chat <- ellmer::chat_ollama(model = \"llama3.1:8b\", seed = 0, echo = \"none\") emend_translate(c(\"\\u733F\\u3082\\u6728\\u304B\\u3089\\u843D\\u3061\\u308B\",                    \"\\u4F60\\u597D\", \"bon appetit\"), chat = chat) #> [1] \"Even monkeys fall from trees.\" \"Hello.\"                        #> [3] \"Enjoy your meal.\"              # }"},{"path":"https://anuopensci.github.io/emend/reference/emend_what_language.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the language in the text. — emend_what_language","title":"Identify the language in the text. — emend_what_language","text":"Identify language text.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_what_language.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the language in the text. — emend_what_language","text":"","code":"emend_what_language(text, chat = get_default_chat())"},{"path":"https://anuopensci.github.io/emend/reference/emend_what_language.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the language in the text. — emend_what_language","text":"text string factor contains text information. chat chat object defined ellmer","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_what_language.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the language in the text. — emend_what_language","text":"character vector language names.","code":""},{"path":"https://anuopensci.github.io/emend/reference/emend_what_language.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify the language in the text. — emend_what_language","text":"","code":"# \\donttest{ chat <- ellmer::chat_ollama(model = \"llama3.1:8b\", seed = 0, echo = \"none\") emend_what_language(c(\"\\u733F\\u3082\\u6728\\u304B\\u3089\\u843D\\u3061\\u308B\",                        \"\\u4F60\\u597D\", \"bon appetit\"), chat = chat) #> [1] \"Japanese\"         \"Mandarin Chinese\" \"French\"           # }"},{"path":"https://anuopensci.github.io/emend/reference/get_default_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or create the default chat object — get_default_chat","title":"Get or create the default chat object — get_default_chat","text":"Get create default chat object","code":""},{"path":"https://anuopensci.github.io/emend/reference/get_default_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or create the default chat object — get_default_chat","text":"","code":"get_default_chat()"},{"path":"https://anuopensci.github.io/emend/reference/get_default_chat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or create the default chat object — get_default_chat","text":"Chat object.","code":""},{"path":"https://anuopensci.github.io/emend/reference/hotel.html","id":null,"dir":"Reference","previous_headings":"","what":"Hotel reviews — hotel","title":"Hotel reviews — hotel","text":"sample review hotels.","code":""},{"path":"https://anuopensci.github.io/emend/reference/hotel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hotel reviews — hotel","text":"","code":"hotel"},{"path":"https://anuopensci.github.io/emend/reference/hotel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hotel reviews — hotel","text":"data.frame 13,193 rows 8 columns reviewer_name name reviewer. reviewer_nationality nationality reviewer. reviewer_rating Reviewer's rating. review_date Date review. review_title Title review. review_text Text review. hotel_name Name hotel reviewed. avg_rating Average rating hotel.","code":""},{"path":"https://anuopensci.github.io/emend/reference/hotel.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hotel reviews — hotel","text":"https://www.kaggle.com/datasets/nikitaryabukhin/reviewshotel","code":""},{"path":"https://anuopensci.github.io/emend/reference/likerts.html","id":null,"dir":"Reference","previous_headings":"","what":"A collection of different likert scales — likerts","title":"A collection of different likert scales — likerts","text":"data set containing 9 different likert scales.","code":""},{"path":"https://anuopensci.github.io/emend/reference/likerts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A collection of different likert scales — likerts","text":"","code":"likerts"},{"path":"https://anuopensci.github.io/emend/reference/likerts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A collection of different likert scales — likerts","text":"data.frame 40 rows 9 columns likert1 7-point agreeableness likert scale. likert2 5-point agreeableness likert scale. likert3 5-point agreeableness likert scale sentence. likert4 5-point frequency likert scale. likert5 5-point rating likert scale. likert6 5-point likelihood likert scale. likert7 5-point likert scale. likert8 5-point satisfaction likert scale. likert9 6-point priority likert scale.","code":""},{"path":"https://anuopensci.github.io/emend/reference/messy.html","id":null,"dir":"Reference","previous_headings":"","what":"A collection of messy inputs — messy","title":"A collection of messy inputs — messy","text":"synthetic dataset contains inputs common standardisation issues.","code":""},{"path":"https://anuopensci.github.io/emend/reference/messy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A collection of messy inputs — messy","text":"","code":"messy"},{"path":"https://anuopensci.github.io/emend/reference/messy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A collection of messy inputs — messy","text":"list 3 character vectors country character vector countries. suburb character vector suburbs Australia various typos. school character vector schools college (typos) Australian National University.","code":""},{"path":"https://anuopensci.github.io/emend/reference/recipes.html","id":null,"dir":"Reference","previous_headings":"","what":"Recipes — recipes","title":"Recipes — recipes","text":"sample 200 recipes.","code":""},{"path":"https://anuopensci.github.io/emend/reference/recipes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recipes — recipes","text":"","code":"recipes"},{"path":"https://anuopensci.github.io/emend/reference/recipes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Recipes — recipes","text":"data.frame 200 rows 7 columns. name name dish. ingredients list ingredients. url URL recipe. image image dish. cook_time Cooking time. prep_time Preperation time. servings number servings text.","code":""},{"path":"https://anuopensci.github.io/emend/reference/recipes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Recipes — recipes","text":"https://github.com/jakevdp/open-recipe-data/tree/main","code":""},{"path":"https://anuopensci.github.io/emend/reference/registration.html","id":null,"dir":"Reference","previous_headings":"","what":"Registration data for workshops — registration","title":"Registration data for workshops — registration","text":"dataset containing registration information series workshops dataset includes columns workshop name, affiliation, cleaned affiliation hand.","code":""},{"path":"https://anuopensci.github.io/emend/reference/registration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Registration data for workshops — registration","text":"","code":"registration"},{"path":"https://anuopensci.github.io/emend/reference/registration.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Registration data for workshops — registration","text":"data frame 221 rows 3 columns: Workshop Character: Workshop name time. Affiliation Character: Affiliation input participants. GroundTruth Character: cleaned affiliation type, cleaned manually author.","code":""},{"path":"https://anuopensci.github.io/emend/reference/registration.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Registration data for workshops — registration","text":"Real registration data Biological Data Science Institute, Australian National University.","code":""},{"path":"https://anuopensci.github.io/emend/reference/restaurant.html","id":null,"dir":"Reference","previous_headings":"","what":"Review of Iori restaurant — restaurant","title":"Review of Iori restaurant — restaurant","text":"Iori Japanese restaurant Canberra, Australia. data contains sample 20 reviews Google maps.","code":""},{"path":"https://anuopensci.github.io/emend/reference/restaurant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Review of Iori restaurant — restaurant","text":"","code":"restaurant"},{"path":"https://anuopensci.github.io/emend/reference/restaurant.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Review of Iori restaurant — restaurant","text":"data.frame 20 rows 2 columns review text review. rating rating 5.","code":""},{"path":"https://anuopensci.github.io/emend/reference/salary.html","id":null,"dir":"Reference","previous_headings":"","what":"Ask A Manager Salary Survey 2021 — salary","title":"Ask A Manager Salary Survey 2021 — salary","text":"Ask Manager Salary Survey 2021","code":""},{"path":"https://anuopensci.github.io/emend/reference/salary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ask A Manager Salary Survey 2021 — salary","text":"","code":"salary"},{"path":"https://anuopensci.github.io/emend/reference/salary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ask A Manager Salary Survey 2021 — salary","text":"data.frame 28,083 rows 18 columns timestamp timestampe response. age Age cateogry. \"old ?\" industry Categorical respondents can enter text . \"industry work ?\" job_title Text entry. \"Job title\" job_title_context Text entry. \"job title needs additional context, please clarify :\" salary_annual Text entry. \"annual salary? (indicate currency later question. part-time hourly, please enter annualized equivalent – earn worked job 40 hours week, 52 weeks year.)\" salarly_additional Text entry. \"much additional monetary compensation get, (example, bonuses overtime average year)? Please include monetary compensation , value benefits.\" currency Categorical entry. \"Please indicate currency\" currency_other Text entry. \"\",\" please indicate currency :\" salary_context Text entry. \"income needs additional context, please provide :\" country Text entry. \"country work ?\" state Categorical entry. \"U.S., state work ?\" city Text entry. \"city work ?\" experience_overall Categorical entry. \"many years professional work experience overall?\" experience_in_field Categorical entry. \"many years professional work experience field?\" education Categorical entry.\"highest level education completed?\" gender Categorical entry. \"gender?\" race Multiselect entry. \"race? (Choose apply.)\"","code":""},{"path":"https://anuopensci.github.io/emend/reference/salary.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ask A Manager Salary Survey 2021 — salary","text":"https://www.askamanager.org/2021/04/-much-money---make-4.html","code":""},{"path":[]},{"path":"https://anuopensci.github.io/emend/news/index.html","id":"initial-release-0-1-0","dir":"Changelog","previous_headings":"","what":"Initial Release","title":"emend 0.1.0 (2025-03-26)","text":"first release package. Added functions emend_lvl_match(), emend_fct_match(), emend_fct_reorder(), emend_lvl_unique() cleaning standardising factor levels. Added functions emend_translate() emend_what_language() translating texts identifying languages. Added functions emend_clean_address() emend_clean_date() standardising address date formats.","code":""}]
